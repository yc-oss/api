{
  "id": 27938,
  "name": "Boundary",
  "slug": "boundary",
  "former_names": [
    "Gloo",
    "Gloo Chat",
    "Gloo"
  ],
  "small_logo_thumb_url": "https://bookface-images.s3.amazonaws.com/small_logos/7d66bb51ef2922c834b2fbb6de2b175e7a85b8f8.png",
  "website": "https://www.boundaryml.com",
  "all_locations": "Seattle, WA, USA",
  "long_description": "Boundary is building BAML -- a programming language to build AI agents.\r\n\r\nWe used to code in assembly, and moved on to C.\r\nFrom C, we moved on to higher level languages like Python.\r\nNow we are going from Python to natural language.\r\n\r\nWhat does the code look like when 50% of the business decisions is decided by an AI agent / prompts? How do you test these AI components? We made BAML to address these problems.\r\n\r\nBAML helps has built-in tools to test, observe, and work with structured LLM outputs / tool calling natively in the language 10x faster. With BAML you can also instantly parallelize LLM Calls, or react to certain events or changes in your pipelines, without having to write any boilerplate. It's like using 'React' for AI.\r\n\r\nBAML code can used from any other language -- providing a standardized way to organize and declare any LLM or AI code.",
  "one_liner": "The programming language for AI",
  "team_size": 5,
  "industry": "B2B",
  "subindustry": "B2B",
  "launched_at": 1678219068,
  "tags": [
    "Artificial Intelligence",
    "Developer Tools",
    "Generative AI",
    "Machine Learning",
    "AI"
  ],
  "tags_highlighted": [],
  "top_company": false,
  "isHiring": true,
  "nonprofit": false,
  "batch": "Winter 2023",
  "status": "Active",
  "industries": [
    "B2B"
  ],
  "regions": [
    "United States of America",
    "America / Canada"
  ],
  "stage": "Early",
  "app_video_public": false,
  "demo_day_video_public": false,
  "app_answers": null,
  "question_answers": false,
  "url": "https://www.ycombinator.com/companies/boundary",
  "api": "https://yc-oss.github.io/api/batches/winter-2023/boundary.json"
}
